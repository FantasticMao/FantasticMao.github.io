<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring Framework on FantasticMao&#39;s Blog</title>
    <link>https://blog.fantasticmao.cn/tags/spring-framework/</link>
    <description>Recent content in Spring Framework on FantasticMao&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 14 Feb 2018 23:33:47 +0800</lastBuildDate>
    
	<atom:link href="https://blog.fantasticmao.cn/tags/spring-framework/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>设计模式概览</title>
      <link>https://blog.fantasticmao.cn/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%A6%82%E8%A7%88/</link>
      <pubDate>Wed, 14 Feb 2018 23:33:47 +0800</pubDate>
      
      <guid>https://blog.fantasticmao.cn/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%A6%82%E8%A7%88/</guid>
      <description>本篇文章记录我所理解和掌握的设计模式，及其在 JDK 和 Spring 中的实现。 创建型 Creational Patterns 抽象工厂模式 Abstract Factory Pattern 意图：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。Provide an interface for creating families of related or dependent objects without specifying their concrete classes.
参考：Wikipedia、java-design-patterns、菜鸟教程
实现：
 org.springframework.beans.factory.FactoryBean#getObject()  生成器模式 Builder Pattern 意图：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。Separate the construction of a complex object from its representation so that the same construction process can create different representations.
参考：Wikipedia、java-design-patterns、菜鸟教程
实现：
 java.lang.StringBuilder &amp;amp; java.lang.StringBuffer org.springframework.boot.web.client.RestTemplateBuilder org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder  工厂方法模式 Factory Method Pattern 意图：定义一个用于创建对象的接口，让子类决定实例化哪一个类。Factory Method 使一个类的实例化延迟到其子类。Define an interface for creating an object, but let subclasses decide which class to instantiate.</description>
    </item>
    
  </channel>
</rss>